# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules =
    [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/ca95ee9d-f41c-4d33-999c-4b895e22ff88";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/43FE-BA47";
    fsType = "vfat";
    options = [ "fmask=0077" "dmask=0077" ];
  };

  fileSystems."/mint" = {
    device = "/dev/disk/by-partuuid/a0450884-11e2-4db3-9cfd-e2735ef8eb5e";
    fsType = "ext4";
  };

  fileSystems."/win" = {
    device = "/dev/disk/by-partuuid/48327e1e-3a36-4a1b-897b-1f69bb8c1a1e";
    fsType = "ntfs";
  };

  swapDevices = [{
    device = "/dev/disk/by-partuuid/75cfd4e3-ce96-4967-9afa-dca1709b0364";
    randomEncryption.enable = true;
  }];

  # boot.kernelParams = ["resume_offset=<offset>"];
  boot.resumeDevice =
    "/dev/disk/by-partuuid/75cfd4e3-ce96-4967-9afa-dca1709b0364";
  powerManagement = {
    enable = true;
    powertop.enable = true;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
}
